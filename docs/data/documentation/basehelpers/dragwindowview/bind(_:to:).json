{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/DragWindowView\/bind(_:to:)"},"sections":[],"variants":[{"paths":["\/documentation\/basehelpers\/dragwindowview\/bind(_:to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ModelValue"},{"text":", ","kind":"text"},{"text":"ViewValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"modelValue"},{"text":": ","kind":"text"},{"text":"ModelValue","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"text":"viewValue","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ViewValue"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"ModelValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"_Bindable"},{"kind":"text","text":", "},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"_Bindable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11BaseHelpers9_BindableP5ValueQa"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ModelValue"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11BaseHelpers9_BindableP5ValueQa"},{"text":" == ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Value","preciseIdentifier":"s:11BaseHelpers9_BindableP5ValueQa","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A binding from model state. "},{"inlineContent":[{"type":"text","text":"E.g."}],"type":"emphasis"},{"text":", a binding derived from a field","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on an observable class."}],"type":"paragraph"}],"name":"modelValue"},{"content":[{"inlineContent":[{"type":"text","text":"A binding from view state. "},{"type":"emphasis","inlineContent":[{"type":"text","text":"E.g."}]},{"text":", a focus binding.","type":"text"}],"type":"paragraph"}],"name":"viewValue"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"SwiftUI comes with many property wrappers that can be used in views to drive view state,","type":"text"},{"type":"text","text":" "},{"text":"like field focus. Unfortunately, these property wrappers ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"must"}]},{"text":" be used in views. It’s not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"possible to extract this logic to an "},{"code":"@Observable","type":"codeVoice"},{"text":" class and integrate it with the rest of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the model’s business logic, and be in a better position to test this state."}]},{"type":"paragraph","inlineContent":[{"text":"We can work around these limitations by introducing a published field to your observable","type":"text"},{"type":"text","text":" "},{"text":"object and synchronizing it to view state with this view modifier.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/BaseHelpers\/documentation\/BaseHelpers","doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/DragWindowView","doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/DragWindowView\/View-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Synchronizes model state to view state via two-way bindings."}],"metadata":{"modules":[{"name":"BaseHelpers","relatedModules":["SwiftUICore"]}],"symbolKind":"method","roleHeading":"Instance Method","title":"bind(_:to:)","role":"symbol","externalID":"s:7SwiftUI4ViewP11BaseHelpersE4bind_2toQrqd___qd_0_tAD9_BindableRd__AdGRd_0_SQ5ValueRpd__AHQyd_0_AIRSr0_lF::SYNTHESIZED::s:11BaseHelpers14DragWindowViewV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ModelValue"},{"text":", ","kind":"text"},{"text":"ViewValue","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"ModelValue","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"extendedModule":"SwiftUICore"},"references":{"doc://BaseHelpers/documentation/BaseHelpers/DragWindowView/View-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/basehelpers\/dragwindowview\/view-implementations","title":"View Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/DragWindowView\/View-Implementations"},"doc://BaseHelpers/documentation/BaseHelpers":{"abstract":[],"role":"collection","identifier":"doc:\/\/BaseHelpers\/documentation\/BaseHelpers","title":"BaseHelpers","type":"topic","url":"\/documentation\/basehelpers","kind":"symbol"},"doc://BaseHelpers/documentation/BaseHelpers/DragWindowView/bind(_:to:)":{"identifier":"doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/DragWindowView\/bind(_:to:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ModelValue","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewValue"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"abstract":[{"type":"text","text":"Synchronizes model state to view state via two-way bindings."}],"title":"bind(_:to:)","url":"\/documentation\/basehelpers\/dragwindowview\/bind(_:to:)"},"doc://BaseHelpers/documentation/BaseHelpers/DragWindowView":{"url":"\/documentation\/basehelpers\/dragwindowview","role":"symbol","navigatorTitle":[{"text":"DragWindowView","kind":"identifier"}],"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DragWindowView","kind":"identifier"}],"identifier":"doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/DragWindowView","title":"DragWindowView","kind":"symbol","type":"topic"}}}