{"metadata":{"symbolKind":"method","extendedModule":"SwiftUICore","roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewP11BaseHelpersE4bind_2toQrqd___qd_0_tAD9_BindableRd__AdGRd_0_SQ5ValueRpd__AHQyd_0_AIRSr0_lF","title":"bind(_:to:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bind"},{"text":"<","kind":"text"},{"text":"ModelValue","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ViewValue","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"ModelValue","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewValue"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"modules":[{"relatedModules":["SwiftUICore"],"name":"BaseHelpers"}]},"sections":[],"abstract":[{"type":"text","text":"Synchronizes model state to view state via two-way bindings."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bind"},{"text":"<","kind":"text"},{"text":"ModelValue","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ViewValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"modelValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"viewValue"},{"kind":"text","text":": "},{"text":"ViewValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"_Bindable"},{"text":", ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"_Bindable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ModelValue","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11BaseHelpers9_BindableP5ValueQa"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11BaseHelpers9_BindableP5ValueQa"},{"text":" == ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11BaseHelpers9_BindableP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"modelValue","content":[{"inlineContent":[{"text":"A binding from model state. ","type":"text"},{"inlineContent":[{"text":"E.g.","type":"text"}],"type":"emphasis"},{"text":", a binding derived from a field","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"on an observable class."}],"type":"paragraph"}]},{"name":"viewValue","content":[{"inlineContent":[{"text":"A binding from view state. ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"E.g."}]},{"type":"text","text":", a focus binding."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI comes with many property wrappers that can be used in views to drive view state,"},{"text":" ","type":"text"},{"type":"text","text":"like field focus. Unfortunately, these property wrappers "},{"inlineContent":[{"text":"must","type":"text"}],"type":"emphasis"},{"text":" be used in views. It’s not","type":"text"},{"text":" ","type":"text"},{"text":"possible to extract this logic to an ","type":"text"},{"code":"@Observable","type":"codeVoice"},{"text":" class and integrate it with the rest of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the model’s business logic, and be in a better position to test this state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can work around these limitations by introducing a published field to your observable"},{"type":"text","text":" "},{"type":"text","text":"object and synchronizing it to view state with this view modifier."}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/BaseHelpers\/documentation\/BaseHelpers","doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/SwiftUICore","doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/SwiftUICore\/View"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/SwiftUICore\/View\/bind(_:to:)"},"kind":"symbol","variants":[{"paths":["\/documentation\/basehelpers\/swiftuicore\/view\/bind(_:to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://BaseHelpers/documentation/BaseHelpers/SwiftUICore":{"type":"topic","identifier":"doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/SwiftUICore","url":"\/documentation\/basehelpers\/swiftuicore","abstract":[],"title":"SwiftUICore","kind":"symbol","role":"collection"},"doc://BaseHelpers/documentation/BaseHelpers":{"abstract":[{"text":"Catalog sloths you find in nature and create new adorable virtual sloths.","type":"text"}],"type":"topic","role":"collection","title":"BaseHelpers","identifier":"doc:\/\/BaseHelpers\/documentation\/BaseHelpers","kind":"symbol","url":"\/documentation\/basehelpers"},"doc://BaseHelpers/documentation/BaseHelpers/SwiftUICore/View/bind(_:to:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"bind","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ModelValue","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ViewValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ModelValue","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"type":"topic","abstract":[{"type":"text","text":"Synchronizes model state to view state via two-way bindings."}],"title":"bind(_:to:)","role":"symbol","identifier":"doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/SwiftUICore\/View\/bind(_:to:)","kind":"symbol","url":"\/documentation\/basehelpers\/swiftuicore\/view\/bind(_:to:)"},"doc://BaseHelpers/documentation/BaseHelpers/SwiftUICore/View":{"navigatorTitle":[{"kind":"identifier","text":"View"}],"url":"\/documentation\/basehelpers\/swiftuicore\/view","kind":"symbol","title":"View","role":"symbol","type":"topic","identifier":"doc:\/\/BaseHelpers\/documentation\/BaseHelpers\/SwiftUICore\/View","abstract":[{"type":"text","text":"From TCA"}],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier","preciseIdentifier":"s:7SwiftUI4ViewP"}]}}}